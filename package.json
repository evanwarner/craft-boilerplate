{
  "name": "project-name",
  "version": "0.0.0",
  "description": "",
  "license": "UNLICENSED",
  "private": true,
  "author": "Evan Warner <evan@evanwarner.com> (https://www.evanwarner.com)",
  "config": {
    "webroot": "dist/webroot/",
    "craft": "dist/craft/"
  },
  "scripts": {
    "// WORKFLOW ---------------------------------------------------------": "",
    "dev": "run-p clean:* && npm-run-all -p dev:css dev:js dev:preprocess copy:* -s watch",
    "stage": "run-p clean:* lint:* && run-p build:css build:js stage:preprocess copy:* && run-p build:svgs hash:*",
    "deploy": "run-p clean:* lint:* && run-p build:css build:js deploy:preprocess copy:* && run-p build:svgs hash:*",
    "// CLEANING ---------------------------------------------------------": "",
    "clean": "run-p clean:*",
    "clean:config": "del \"${npm_package_config_craft}filerev.json\"",
    "clean:webroot": "del \"${npm_package_config_webroot}*\" \"!${npm_package_config_webroot}cpresources\" \"!${npm_package_config_webroot}media\" \"!${npm_package_config_webroot}index.php\" --dot",
    "// LINTING ----------------------------------------------------------": "",
    "lint": "run-p lint:*",
    "lint:css": "stylelint \"src/css/**/*.css\"",
    "lint:js": "eslint \"src/js/**/*.js\"",
    "// CSS --------------------------------------------------------------": "",
    "dev:css": "postcss src/css/*.css -d ${npm_package_config_webroot}css/ --verbose",
    "build:css": "postcss src/css/*.css --no-map -d ${npm_package_config_webroot}css/",
    "// JAVASCRIPT -------------------------------------------------------": "",
    "prep:js": "mkdir -p ${npm_package_config_webroot}js",
    "dev:js": "npm run prep:js && find src/js -type f -name \"*.js\" -exec npm run dev:js:process -- {} \\;",
    "dev:js:process": "processJs() { terser $1 -o ${npm_package_config_webroot}js/${1:7} --config-file .terser.json --source-map; }; processJs",
    "build:js": "npm run prep:js && find src/js -type f -name \"*.js\" -exec npm run build:js:process -- {} \\;",
    "build:js:process": "processJs() { terser $1 -o ${npm_package_config_webroot}js/${1:7} --config-file .terser.json; }; processJs",
    "// COPYING ----------------------------------------------------------": "",
    "copy": "run-p copy:*",
    "copy:images": "rsync -vr src/img ${npm_package_config_webroot} --delete --exclude=\".*\"",
    "copy:webroot": "rsync -v src/* ${npm_package_config_webroot}",
    "// PREPROCESSING ----------------------------------------------------": "",
    "dev:preprocess": "run-p \"preprocess:* -- {1}\" -- '{\"NODE_ENV\": \"dev\", \"DEBUG\": true}'",
    "stage:preprocess": "run-p \"preprocess:* -- {1}\" -- '{\"NODE_ENV\": \"staging\"}'",
    "deploy:preprocess": "run-p \"preprocess:* -- {1}\" -- '{\"NODE_ENV\": \"production\"}'",
    "preprocess:htaccess": "preprocess -f src/.htaccess -d ${npm_package_config_webroot}.htaccess -t bash -c",
    "// WATCHING ---------------------------------------------------------": "",
    "watch": "run-p watch:*",
    "watch:css": "onchange -k \"src/css/**/*.css\" -- npm run dev:css",
    "watch:js": "onchange -k \"src/js/**/*.js\" -- npm run dev:js",
    "watch:images": "onchange -k \"src/img/**/*\" -- npm run copy:images",
    "watch:webroot": "onchange -k \"src/*\" -- npm run copy:webroot",
    "watch:preprocess": "onchange -k \"src/.htaccess\" -- npm run dev:preprocess",
    "// IMAGE OPTIMIZING -------------------------------------------------": "",
    "build:svgs": "svgo -r -f ${npm_package_config_webroot}img/ -p 2",
    "// HASHING ----------------------------------------------------------": "",
    "hash:css": "npm run hashit -- css/**/*.css",
    "hash:js": "npm run hashit -- js/**/*.js",
    "hashit": "hashit() { hashmark --cwd ${npm_package_config_webroot} -l 8 \"$1\" \"{dir}/{name}.{hash}{ext}\" -m ../../${npm_package_config_craft}filerev.json; }; hashit",
    "// VERSIONING -------------------------------------------------------": "",
    "preversion": "npm run lint",
    "bump": "npm run bump:patch",
    "bump:patch": "npm --no-git-tag-version version patch",
    "bump:minor": "npm --no-git-tag-version version minor",
    "bump:major": "npm --no-git-tag-version version major",
    "bump:prepatch": "npm --no-git-tag-version version prepatch",
    "bump:preminor": "npm --no-git-tag-version version preminor",
    "bump:premajor": "npm --no-git-tag-version version premajor",
    "postversion": "git add package*.json && git commit -m \"ðŸŽ‰ Prepare v${npm_package_version}\" && git push origin develop",
    "mergeversion": "git checkout master && git merge --no-ff -m \"Merge branch 'develop'\" develop && git tag -a v${npm_package_version} -m \"\" && git push origin master && git push origin v${npm_package_version} && git checkout develop"
  },
  "devDependencies": {
    "caniuse-lite": "^1.0.30001216",
    "cssnano": "^4.1.11",
    "del-cli": "^3.0.1",
    "eslint": "^7.25.0",
    "eslint-plugin-jsdoc": "^32.3.2",
    "hashmark": "^5.0.0",
    "npm-run-all": "^4.1.5",
    "onchange": "^7.1.0",
    "postcss": "^7.0.32",
    "postcss-cli": "^7.1.0",
    "postcss-import": "^12.0.1",
    "postcss-preset-env": "^6.7.0",
    "preprocess": "^3.2.0",
    "preprocess-cli-tool": "^1.0.1",
    "stylelint": "^13.13.0",
    "stylelint-order": "^4.1.0",
    "svgo": "^2.3.0",
    "terser": "^5.7.0"
  }
}
