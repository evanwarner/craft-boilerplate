{#
  The _error template will, by default, handle any HTTP error and present its
  status code and error text. To customize a particular error, create an entry
  in the Error Pages section with the appropriate HTTP Status selected.

  The Error Pages section, by default, has an Entry URI Format set to an entry's
  chosen HTTP Status. This enforces that there may only be one entry per status
  code, as Craft will not allow you to save an entry with a URL collision. This
  also allows direct testing of an error page by accessing

      http(s)://<hostname>/<httpStatus>

  In a production environment, direct access to the error pages is disabled and
  will throw a 404 error.
#}

{% extends '_layouts/main' %}

{% set canonicalUrl = null %}
{% set metaRobots = 'noindex, nofollow' %}



{% if entry is defined %}
  {# An error entry was directly accessed for testing. #}
  {% if getenv('ENVIRONMENT') == 'production' %}
    {# Throw a 404 error if an error entry is directly accessed on production. #}
    {% exit 404 %}
  {% endif %}
  {% set code = craft.app.request.getQueryParam('code') ?? 0 %}
  {% set message = craft.app.request.getQueryParam('message') ?? '' %}
  {% set codeMatch = entry.errorCodes.errorCode(code).one() %}
  {% set errorTitle = codeMatch.titleOverride ?? entry.title %}
{% else %}
  {# An actual error occurred. #}
  {% set entry = craft.entries
    .section('errorPages')
    .httpStatus(statusCode)
    .with([
      ['errorCodes', {
        'errorCode': code,
      }],
    ])
    .one()
  %}
  {% set codeMatch = entry.errorCodes[0] ?? null %}
  {% set errorTitle = codeMatch.titleOverride
    ?? entry.title
    ?? "Error #{statusCode}: #{craft.app.response.statusText}"
  %}
{% endif %}
{% set errorBody = codeMatch.messageOverride ?? entry.errorMessage %}
{% if message and (codeMatch.appendOriginalMessage ?? false) or errorBody is empty %}
  {% set errorBody = errorBody ~ "<p>#{message}</p>" %}
{% endif %}



{% block content %}
  <h1>{{ errorTitle }}</h1>
  {{ errorBody | raw }}
{% endblock %}
