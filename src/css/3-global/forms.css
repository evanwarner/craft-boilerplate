/*
  Relevant pseudo-classes
  - :hover, :focus, :active
  - :default
  - :checked
  - :indeterminate
  - :enabled, :disabled
  - :in-range, :out-of-range
  - :valid, :invalid
  - :user-invalid
  - :read-only, :read-write
  - :required, :optional
  - :placeholder-shown
 */

/* === Text Inputs === */
/*
 * These inputs render as textfields in all browsers.
 */
:where(
  [type="email"],
  [type="number"],
  [type="password"],
  [type="search"],
  [type="tel"],
  [type="text"],
  [type="url"],
  textarea
) {
  border: var(--base-input-border);
}

:where(
  [type="email"],
  [type="number"],
  [type="password"],
  [type="search"],
  [type="tel"],
  [type="text"],
  [type="url"],
  textarea
):where([readonly]) {

}

:where(
  [type="email"],
  [type="number"],
  [type="password"],
  [type="search"],
  [type="tel"],
  [type="text"],
  [type="url"],
  textarea
):where(:disabled) {

}

:where(
  [type="email"],
  [type="number"],
  [type="password"],
  [type="search"],
  [type="tel"],
  [type="text"],
  [type="url"],
  textarea
):where(:focus) {

}





/* === Date and Time Inputs === */
/*
 * These inputs render as textfields in some browsers and select menus in other
 * browsers. Keep this in mind when styling.
 */
:where(
  [type="date"],
  [type="datetime-local"],
  [type="month"],
  [type="time"],
  [type="week"]
) {
  border: var(--base-input-border);
}

:where(
  [type="date"],
  [type="datetime-local"],
  [type="month"],
  [type="time"],
  [type="week"]
):where([readonly]) {

}

:where(
  [type="date"],
  [type="datetime-local"],
  [type="month"],
  [type="time"],
  [type="week"]
):where(:disabled) {

}

:where(
  [type="date"],
  [type="datetime-local"],
  [type="month"],
  [type="time"],
  [type="week"]
):where(:focus) {

}





/* === Select Menus === */
select {
  border: var(--base-input-border);
}

select:where(:disabled) {

}

select:where(:focus) {

}





/* === Buttons === */
:where(
  button,
  [type="button"],
  [type="reset"],
  [type="submit"]
) {
  display: inline-block;
  border: var(--base-input-border);
}

:where(
  button,
  [type="button"],
  [type="reset"],
  [type="submit"]
):where(:hover, :focus) {

}

:where(
  button,
  [type="button"],
  [type="reset"],
  [type="submit"]
):where(:disabled) {

}





/* === Image Inputs === */
/*
 * 1. Set fallback in case image doesn't load.
 */
:where([type="image"]) {
  background-color: #000; /* 1 */
  color: #FFF; /* 1 */
}

:where([type="image"]):where(:hover, :focus) {

}

:where([type="image"]:disabled) {

}





/* === File Inputs === */
:where([type="file"]) {

}

::-webkit-file-upload-button {
  border: var(--base-input-border);
}
/* ...continued (browser-specific) */
::-ms-browse {
  border: var(--base-input-border);
}

:where([type="file"]:focus) {

}

:where(:focus)::-webkit-file-upload-button {

}
/* ...continued (browser-specific) */
:where(:focus)::-ms-browse {

}

:where([type="file"]):disabled {

}

:where(:disabled)::-webkit-file-upload-button {

}
/* ...continued (browser-specific) */
:where(:disabled)::-ms-browse {

}





/* === Range Inputs === */
:where([type="range"]) {

}

:where([type="range"]:disabled) {

}
